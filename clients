			for (m = mons; m && m->num != r->monitor; m = m->next);
		if (*x >= m->wx + m->ww)
			*x = m->wx + m->ww - WIDTH(c);
		if (*y >= m->wy + m->wh)
			*y = m->wy + m->wh - HEIGHT(c);
		if (*x + *w + 2 * c->bw <= m->wx)
			*x = m->wx;
		if (*y + *h + 2 * c->bw <= m->wy)
			*y = m->wy;
		showhide(m->stack);
	else for (m = mons; m; m = m->next)
		showhide(m->stack);
	} else for (m = mons; m; m = m->next)
	strncpy(m->ltsymbol, m->lt[m->sellt]->symbol, sizeof m->ltsymbol);
	if (m->lt[m->sellt]->arrange)
		m->lt[m->sellt]->arrange(m);
		for (c = m->clients; c; c = c->next)
			if (!(occ & 1 << i || m->tagset[m->seltags] & 1 << i))
	for (m = mons; m; m = m->next)
		while (m->stack)
			unmanage(m->stack, 0);
		for (m = mons; m && m->next != mon; m = m->next);
		m->next = mon->next;
			for (m = mons; m; m = m->next) {
				for (c = m->clients; c; c = c->next)
						resizeclient(c, m->mx, m->my, m->mw, m->mh);
				XMoveResizeWindow(dpy, m->barwin, m->wx, m->by, m->ww, bh);
				c->x = m->mx + ev->x;
				c->y = m->my + ev->y;
			if ((c->x + c->w) > m->mx + m->mw && c->isfloating)
				c->x = m->mx + (m->mw / 2 - WIDTH(c) / 2); /* center in x direction */
			if ((c->y + c->h) > m->my + m->mh && c->isfloating)
				c->y = m->my + (m->mh / 2 - HEIGHT(c) / 2); /* center in y direction */
	m->tagset[0] = m->tagset[1] = 1;
	m->mfact = mfact;
	m->nmaster = nmaster;
	m->showbar = showbar;
	m->topbar = topbar;
	m->gappih = gappih;
	m->gappiv = gappiv;
	m->gappoh = gappoh;
	m->gappov = gappov;
	m->lt[0] = &layouts[0];
	m->lt[1] = &layouts[1 % LENGTH(layouts)];
	strncpy(m->ltsymbol, layouts[0].symbol, sizeof m->ltsymbol);
		for (m = mons; m->next; m = m->next);
		for (m = mons; m->next != selmon; m = m->next);
		drw_text(drw, m->ww - tw, 0, tw, bh, 0, stext, 0);
	for (c = m->clients; c; c = c->next) {
		if (!(occ & 1 << i || m->tagset[m->seltags] & 1 << i))
		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
	w = blw = TEXTW(m->ltsymbol);
	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
	if ((w = m->ww - tw - x) > bh) {
		if (m->sel) {
			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
			if (m->sel->isfloating)
				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
	drw_map(drw, m->barwin, 0, 0, m->ww, bh);
	for (m = mons; m; m = m->next)
	for (c = m->clients; c; c = c->next)
		snprintf(m->ltsymbol, sizeof m->ltsymbol, "[%d]", n);
	for (c = nexttiled(m->clients); c; c = nexttiled(c->next))
		resize(c, m->wx, m->wy, m->ww - 2 * c->bw, m->wh - 2 * c->bw, 0);
	for (m = mons; m; m = m->next)
	if (!m->sel)
	if (m->sel->isfloating || !m->lt[m->sellt]->arrange)
		XRaiseWindow(dpy, m->sel->win);
	if (m->lt[m->sellt]->arrange) {
		wc.sibling = m->barwin;
		for (c = m->stack; c; c = c->snext)
	c->tags = m->tagset[m->seltags]; /* assign tags of target monitor */
	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
	if (n > m->nmaster)
		mw = m->nmaster ? (m->ww + m->gappiv*ie) * m->mfact : 0;
		mw = m->ww - 2*m->gappov*oe + m->gappiv*ie;
	for (i = 0, my = ty = m->gappoh*oe, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
		if (i < m->nmaster) {
			r = MIN(n, m->nmaster) - i;
			h = (m->wh - my - m->gappoh*oe - m->gappih*ie * (r - 1)) / r;
			resize(c, m->wx + m->gappov*oe, m->wy + my, mw - (2*c->bw) - m->gappiv*ie, h - (2*c->bw), 0);
			if (my + HEIGHT(c) + m->gappih*ie < m->wh)
			my += HEIGHT(c) + m->gappih*ie;
			h = (m->wh - ty - m->gappoh*oe - m->gappih*ie * (r - 1)) / r;
			resize(c, m->wx + mw + m->gappov*oe, m->wy + ty, m->ww - mw - (2*c->bw) - 2*m->gappov*oe, h - (2*c->bw), 0);
			if (ty + HEIGHT(c) + m->gappih*ie < m->wh)
				ty += HEIGHT(c) + m->gappih*ie;
	for (m = mons; m; m = m->next) {
		if (m->barwin)
		m->barwin = XCreateWindow(dpy, root, m->wx, m->by, m->ww, bh, 0, DefaultDepth(dpy, screen),
		XDefineCursor(dpy, m->barwin, cursor[CurNormal]->cursor);
		XMapRaised(dpy, m->barwin);
		XSetClassHint(dpy, m->barwin, &ch);
	m->wy = m->my;
	m->wh = m->mh;
	if (m->showbar) {
		m->wh -= bh;
		m->by = m->topbar ? m->wy : m->wy + m->wh;
		m->wy = m->topbar ? m->wy + bh : m->wy;
		m->by = -bh;
	for (m = mons; m; m = m->next)
		for (c = m->clients; c; c = c->next)
		for (n = 0, m = mons; m; m = m->next, n++);
				for (m = mons; m && m->next; m = m->next);
					m->next = createmon();
			for (i = 0, m = mons; i < nn && m; m = m->next, i++)
				|| unique[i].x_org != m->mx || unique[i].y_org != m->my
				|| unique[i].width != m->mw || unique[i].height != m->mh)
					m->num = i;
					m->mx = m->wx = unique[i].x_org;
					m->my = m->wy = unique[i].y_org;
					m->mw = m->ww = unique[i].width;
					m->mh = m->wh = unique[i].height;
				for (m = mons; m && m->next; m = m->next);
				while ((c = m->clients)) {
					m->clients = c->next;
		strcpy(stext, "dwm-"VERSION);
	for (m = mons; m; m = m->next) {
		for (c = m->clients; c; c = c->next) {
	for (m = mons; m; m = m->next) {
		for (c = m->clients; c; c = c->next) {
	for (m = mons; m; m = m->next)
		for (c = m->clients; c; c = c->next)
	for (m = mons; m; m = m->next)
		if (w == m->barwin)
		die("dwm-"VERSION);
